{"version":3,"sources":["assets/space.jpg","Wrappers/HomeWrap.js","components/SearchBox.js","Wrappers/HeroCardWrapper.js","components/HeroCard.js","components/ScrollBox.js","components/TwitterButton.js","components/FlippedCard.js","components/HeroCardList.js","routes.js","App.js","actions.js","constants.js","reducers.js","serviceWorker.js","index.js"],"names":["module","exports","HomeWrap","styled","div","SpaceBG","stylex","padding","SearchBox","searchfield","searchChange","style","id","aria-label","type","placeholder","onChange","HeroCardWrapper","props","primary","css","HeroCard","images","name","onFlip","src","alt","className","onClick","ScrollBox","TwitterButton","url","options","text","FlippedCard","powers","appearance","biography","getStats","Object","entries","map","stats","i","key","textShadow","aliases","join","placeOfBirth","firstAppearance","gender","race","hairColor","height","weight","marginBottom","HeroCardList","heroes","isFlipped","cardToFlip","x","Math","random","sm","powerstats","lg","Routes","path","exact","component","App","handleClick","e","setState","flipped","state","target","this","onRequestHeroes","onSearchChange","searchField","isPending","findHeroe","filter","toLowerCase","includes","slice","React","Component","connect","searchHeroes","requestHeroes","err","dispatch","event","payload","value","fetch","then","res","json","data","catch","searchInitialState","heroesInitialState","Boolean","window","location","hostname","match","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c5e4f9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space.701270fd.jpg\";","import styled from \"styled-components\";\nimport SpaceBG from \"../assets/space.jpg\";\nconst HomeWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin: 0 auto;\n\n  background-image: url(${SpaceBG});\n  background-size: cover;\n  background-repeat: no-repeat;\n  height: 100%;\n\n  header {\n    h1 {\n      font-family: \"Monoton\", sans-serif;\n      color: #fff;\n    }\n  }\n`;\n\nexport default HomeWrap;\n","import React from \"react\";\n//child components expect props from parent components like this one\n\nconst stylex = {\n  padding: \"10px\"\n};\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div style={stylex}>\n      <input\n        id=\"search-box\"\n        style={{ padding: \"10px\" }}\n        aria-label=\"search heroes\"\n        type=\"search\"\n        placeholder=\"search heroes\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import styled, { css } from \"styled-components\";\n\nconst HeroCardWrapper = styled.div`\n  border-radius: 7px;\n  background-color: #1d66bb;\n\n  width: 150px;\n  position: relative;\n\n  img {\n    width: 150px;\n    border-radius: 5px;\n  }\n\n  .info {\n    h2 {\n      color: #f5f5f5;\n\n      font-family: \"Teko\", sans-serif;\n\n      font-size: calc(18px + 0.5vw);\n      margin: 1% auto;\n    }\n  }\n  .flip-button {\n    margin: 1% auto;\n    background-color: transparent;\n    border: 2px solid #f5f5f5 !important;\n    font-weight: bold;\n    transition: linear 0.3s ease-in-out;\n    color: #f5f5f5;\n  }\n\n  box-shadow: 0 0 5px 0px #f5f5f5;\n\n  ${props =>\n    props.primary &&\n    css`\n background: #000046;\n        background: -webkit-linear-gradient(to bottom, #1CB5E0, #000046);\n        background: linear-gradient(to bottom, #1CB5E0, #000046);\n  width: 350px;\nposition: absolute;\nleft: 50%;\nmargin-left: -175px;\n background-repeat: no-repeat;\n        background-size: cover;\n        overflow-Y: scroll;\n        height: 500px;\n        color #fff;\n        text-shadow: 0px 1px 5px #003F7F;\n    \nimg {\n    border-radius: 50%;\n    height: 150px;\n    width: 150px;\n \n  }\n\n\n\n    `}\n\n  button {\n    padding: 10px;\n    border-radius: 8px;\n    background-color: #f5f5f5;\n  }\n`;\n\nexport default HeroCardWrapper;\n","import React from \"react\";\nimport HeroCardWrapper from \"../Wrappers/HeroCardWrapper\";\n\nconst HeroCard = ({ images, name, onFlip }) => {\n  return (\n    <HeroCardWrapper>\n      <img src={images} alt=\"heroes\" />\n      <div className=\"info\">\n        <h2>{name}</h2>\n        <button className=\"flip-button\" onClick={onFlip} id={name}>\n          FLIP CARD\n        </button>\n      </div>\n    </HeroCardWrapper>\n  );\n};\n\nexport default HeroCard;\n","import styled from \"styled-components\";\n\nconst ScrollBox = styled.div`\n  max-width: 2000px;\n\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n\n  grid-gap: 10px 10px;\n  position: relative;\n  margin: 60px auto;\n  @media only screen and (max-width: 965px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media only screen and (max-width: 675px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nexport default ScrollBox;\n","import React from \"react\";\nimport { TwitterShareButton, TwitterFollowButton } from \"react-twitter-embed\";\nconst TwitterButton = props => {\n  return (\n    <TwitterShareButton\n      url={\"https://pjdaze.github.io/my-hero-stats-redux/\"}\n      options={{\n        text: \"So This Are The Stats On My Favorite Super Hero!\"\n      }}\n    />\n  );\n};\n\nexport default TwitterButton;\n","import React from \"react\";\nimport HeroCardWrapper from \"../Wrappers/HeroCardWrapper\";\nimport TwitterButton from \"./TwitterButton\";\n\nconst FlippedCard = ({\n  images,\n  name,\n  powers,\n  appearance,\n  biography,\n  onFlip\n}) => {\n  //const appearanceStats = Object.entries(appearance);\n\n  const powerStats = Object.entries(powers);\n\n  const getStats = powerStats.map((stats, i) => (\n    <li key={i}>{`${stats[0]}: ${stats[1]}`}</li>\n  ));\n\n  return (\n    <HeroCardWrapper primary>\n      <div className=\"img-wrap\">\n        <img src={images} alt=\"heroes\" />\n      </div>\n      <div\n        style={{\n          textShadow: \"0px 1px 5px #003F7F\"\n        }}\n      >\n        {\" \"}\n        <p className=\"card-titles\">Name:</p>\n        <p>{name}</p>\n        <p className=\"card-titles\">Nicknames: </p>\n        <p>{biography.aliases.join(\", \")}</p>\n        <p className=\"card-titles\">Place Of Birth:</p>\n        <p>{biography.placeOfBirth}</p>\n        <p className=\"card-titles\">First Appearance:</p>\n        <p>{biography.firstAppearance}</p>\n        <p>Publisher</p>\n        <p>{biography.firstAppearance}</p>\n        <p className=\"card-titles\">Appearance</p>\n        <ul>\n          <li>Gender: {appearance.gender}</li>\n          <li>Race: {appearance.race}</li>\n          <li>Hair Color: {appearance.hairColor}</li>\n          <li>Height: {appearance.height[0]}</li>\n          <li>Weight: {appearance.weight[0]}</li>\n        </ul>\n        <h2>Powers Stats</h2>\n        <ul>{getStats}</ul>\n      </div>\n      <button\n        className=\"flip-button\"\n        style={{ marginBottom: \"10px\" }}\n        onClick={onFlip}\n      >\n        FlIP CARD\n      </button>\n      <TwitterButton />\n    </HeroCardWrapper>\n  );\n};\n\nexport default FlippedCard;\n","import React from \"react\";\nimport HeroCard from \"../components/HeroCard\";\nimport ScrollBox from \"./ScrollBox\";\nimport FlippedCard from \"./FlippedCard\";\n\nconst ManageMembers = function(member) {\n  if (!member.length) {\n    return \"loading page\";\n  } else {\n    return member.map(x => x.name);\n  }\n};\n\nconst HeroCardList = ({ heroes, onFlip, isFlipped, cardToFlip }) => {\n  return (\n    <ScrollBox>\n      {heroes.map((x, i) => {\n        if (!isFlipped) {\n          return (\n            <HeroCard\n              key={Math.random() + heroes[i]}\n              name={heroes[i].name}\n              images={heroes[i].images.lg}\n              onFlip={onFlip}\n            />\n          );\n        } else if (heroes[i].name === cardToFlip) {\n          return (\n            <FlippedCard\n              key={Math.random() + heroes[i]}\n              appearance={heroes[i].appearance}\n              name={heroes[i].name}\n              images={heroes[i].images.sm}\n              powers={heroes[i].powerstats}\n              biography={heroes[i].biography}\n              onFlip={onFlip}\n              cardToFlip={cardToFlip}\n            />\n          );\n        }\n      })}\n    </ScrollBox>\n  );\n};\n\nexport default HeroCardList;\n","import React from \"react\";\nimport { BrowserRouter as Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\n\nconst Routes = props => (\n  <Switch>\n    <Route path=\"/\" exact component={App} />\n    <Route path=\"/App\" component={App} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport HomeWrap from \"./Wrappers/HomeWrap\";\n\nimport { heroes } from \"./fake_data/Heroes\";\nimport SearchBox from \"./components/SearchBox\";\nimport HeroCardList from \"./components/HeroCardList\";\nimport ScrollBox from \"./components/ScrollBox\";\nimport Routes from \"./routes\";\nimport \"./App.css\";\n\nimport { setSearchField, requestHeroes } from \"./actions\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchHeroes.searchField,\n    heroes: state.requestHeroes.heroes,\n    isPending: state.requestHeroes.isPending,\n    err: state.requestHeroes.err\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestHeroes: () => dispatch(requestHeroes())\n  };\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      flipped: false,\n      cardToFlip: \"\"\n    };\n  }\n  componentDidMount() {\n    this.props.onRequestHeroes();\n  }\n\n  handleClick = e => {\n    this.setState({\n      flipped: !this.state.flipped,\n      cardToFlip: e.target.id\n    });\n  };\n\n  render() {\n    const { flipped, cardToFlip } = this.state;\n    const { heroes, onSearchChange, searchField, isPending } = this.props;\n\n    const findHeroe = heroes.filter(x =>\n      x.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return isPending ? (\n      <h1> \"Loading...\"</h1>\n    ) : (\n      <HomeWrap className=\"home\">\n        <header style={{ height: \"100px\" }}>\n          {\" \"}\n          <h1>Find Your Hero</h1>\n        </header>\n        <SearchBox searchChange={onSearchChange} />\n        <HeroCardList\n          heroes={findHeroe.slice(0, 12)}\n          onFlip={this.handleClick}\n          isFlipped={flipped}\n          cardToFlip={cardToFlip}\n        />\n        <Routes />\n      </HomeWrap>\n    );\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_HEROES_PENDING,\n  REQUEST_HEROES_SUCCESS,\n  REQUEST_HEROES_FAILED\n} from \"./constants\";\n//for search box\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\n\n//This one is to fetch data from api\n\nexport const requestHeroes = () => dispatch => {\n  dispatch({ type: REQUEST_HEROES_PENDING });\n  fetch(\"https://akabab.github.io/superhero-api/api/all.json\")\n    .then(res => res.json())\n    .then(data => dispatch({ type: REQUEST_HEROES_SUCCESS, payload: data }))\n    .catch(err => dispatch({ type: REQUEST_HEROES_FAILED, payload: err }));\n};\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\nexport const REQUEST_HEROES_PENDING = \"REQUEST_HEROES_PENDING\";\nexport const REQUEST_HEROES_SUCCESS = \"REQUEST_HEROES_SUCCESS\";\nexport const REQUEST_HEROES_FAILED = \"REQUEST_HEROES_FAILED\";\nexport const TRIGGER_CLICK = \"TRIGGER_CLICK\";\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_HEROES_PENDING,\n  REQUEST_HEROES_SUCCESS,\n  REQUEST_HEROES_FAILED\n} from \"./constants\";\n\nconst searchInitialState = {\n  searchField: \"\"\n};\n\nconst heroesInitialState = {\n  isPending: false,\n  heroes: [],\n  err: \"\"\n};\n\n//////Here i use default params in case state or action is empty\nexport const searchHeroes = (state = searchInitialState, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return { ...state, searchField: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const requestHeroes = (state = heroesInitialState, action = {}) => {\n  switch (action.type) {\n    case REQUEST_HEROES_PENDING:\n      return { ...state, isPending: true };\n    case REQUEST_HEROES_SUCCESS:\n      return { ...state, heroes: action.payload, isPending: false };\n\n    case REQUEST_HEROES_FAILED:\n      return { ...state, err: action.payload, isPending: false };\n\n    default:\n      return state;\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { searchHeroes, requestHeroes } from \"./reducers\";\nimport * as serviceWorker from \"./serviceWorker\";\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchHeroes, requestHeroes });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}