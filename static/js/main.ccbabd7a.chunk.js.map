{"version":3,"sources":["assets/space.jpg","Wrappers/HomeWrap.js","components/SearchBox.js","Wrappers/HeroCardWrapper.js","components/HeroCard.js","components/ScrollBox.js","components/TwitterButton.js","components/FlippedCard.js","actions.js","constants.js","components/HeroCardList.js","routes.js","App.js","reducers.js","serviceWorker.js","index.js"],"names":["module","exports","HomeWrap","styled","div","SpaceBG","stylex","padding","inputStyle","fontSize","textAlign","fontFamily","SearchBox","searchfield","searchChange","style","id","aria-label","type","placeholder","onChange","HeroCardWrapper","props","primary","css","HeroCard","images","name","onFlip","src","alt","className","onClick","ScrollBox","TwitterButton","url","options","text","mapDispatch","closeHeroCard","connect","state","powers","appearance","biography","getStats","Object","entries","map","stats","i","key","aliases","join","placeOfBirth","firstAppearance","gender","race","hairColor","height","weight","HeroCardList","heroes","isFlipped","cardToFlip","x","Math","random","sm","powerstats","lg","Routes","path","exact","component","App","console","log","Date","this","onRequestHeroes","onSearchChange","searchField","handleClick","flipped","findHeroe","filter","toLowerCase","includes","slice","React","Component","searchHeroes","requestHeroes","isPending","err","setOnClick","dispatch","event","payload","target","value","fetch","then","res","json","data","catch","e","searchInitialState","heroesInitialState","heroIdInitialState","clickInitialState","Boolean","window","location","hostname","match","logger","createLogger","rootReducer","combineReducers","action","setHeroID","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ccbabd7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space.701270fd.jpg\";","import styled from \"styled-components\";\nimport SpaceBG from \"../assets/space.jpg\";\nconst HomeWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n  text-align: center;\n  margin: 0 auto;\n\n  background-image: url(${SpaceBG});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  min-height: 100vh;\n\n  header {\n    h1 {\n      font-family: \"Monoton\", sans-serif;\n      color: #fff;\n    }\n  }\n`;\n\nexport default HomeWrap;\n","import React from \"react\";\n//child components expect props from parent components like this one\n\nconst stylex = {\n  padding: \"10px\"\n};\n\nconst inputStyle = {\n  fontSize: \"1em\",\n  padding: \"8px\",\n  textAlign: \"center\",\n  fontFamily: \"Titillium Web\"\n};\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div style={stylex}>\n      <input\n        id=\"search-box\"\n        style={inputStyle}\n        aria-label=\"search heroes\"\n        type=\"search\"\n        placeholder=\"Search Heroes\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import styled, { css } from \"styled-components\";\n\nconst HeroCardWrapper = styled.div`\n  border-radius: 7px;\n  background-color: #1d66bb;\n  transition: ALl 500ms ease-in-out;\n  &:hover {\n    background-color: #222;\n    .flip-button {\n      display: block;\n      margin-bottom: 60%;\n    }\n\n    img {\n      opacity: 0;\n    }\n  }\n  width: 150px;\n  position: relative;\n\n  img {\n    width: 150px;\n    border-radius: 5px;\n  }\n\n  .info {\n    h2 {\n      color: #f5f5f5;\n\n      font-family: \"Teko\", sans-serif;\n\n      font-size: calc(18px + 0.5vw);\n      margin: 1% auto;\n    }\n  }\n  .flip-button {\n    margin: 1% auto;\n    background-color: transparent;\n    border: 2px solid #f5f5f5 !important;\n    font-weight: bold;\n    transition: linear 0.3s ease-in-out;\n    color: #f5f5f5;\n    display: none;\n  }\n\n  box-shadow: 0 0 5px 0px #f5f5f5;\n\n  ${props =>\n    props.primary &&\n    css`\n\n\nbackground: #a8ff78;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to bottom, #78ffd6, #a8ff78);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to bottom, #78ffd6, #a8ff78); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\npadding: 10px;\n\n\nposition: absolute;\nleft: 50%;\nmargin-left: -175px;\n background-repeat: no-repeat;\n        background-size: cover;\n        overflow-Y: scroll;\nwidth: 425px;\n        height: 600px;\n        color: #f5f5f5;\n        text-shadow: 0px 1px 5px #003F7F;\n.flipped-card {\n\n\n\n  *{\n\n  border 1px solid #fff;\n}\n\n\ndisplay: grid; \ngrid-template-columns: 1fr 1fr;\n\n\ntext-align: left\np {\n  padding: 15px;\n\n  margin-bottom: 8px;\n}\n\n\n}\n\n&:hover {\n    background-color: #222;\n    .flip-button {\n      display: block;\n\n    }\n\n    img {\n\n    }\n \n  }\n\n.power-stats {\n  *{\n    box-sizing: border-box;\n  border 1px solid #fff;\n  text-align: left;\n\n}\n  display: grid; \n\ngrid-template-columns: 1fr 1fr;\n\n}\n    \nimg {\n    border-radius: 50%;\n    height: 150px;\n    width: 150px;\n \n  }\n  li {\n  padding: 15px;\n}\n\n\n    `}\n\n  button {\n    padding: 10px;\n    border-radius: 8px;\n    background-color: #f5f5f5;\n  }\n`;\n\nexport default HeroCardWrapper;\n","import React from \"react\";\nimport HeroCardWrapper from \"../Wrappers/HeroCardWrapper\";\n\nconst HeroCard = ({ images, name, onFlip }) => {\n  return (\n    <HeroCardWrapper>\n      <img src={images} alt=\"heroes\" />\n      <div className=\"info\">\n        <h2>{name}</h2>\n        <button className=\"flip-button\" onClick={onFlip} id={name}>\n          FLIP CARD\n        </button>\n      </div>\n    </HeroCardWrapper>\n  );\n};\n\nexport default HeroCard;\n","import styled from \"styled-components\";\n\nconst ScrollBox = styled.div`\n  max-width: 2000px;\n\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n\n  grid-gap: 10px 10px;\n  position: relative;\n  margin: 60px auto;\n  @media only screen and (max-width: 965px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media only screen and (max-width: 675px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nexport default ScrollBox;\n","import React from \"react\";\nimport { TwitterShareButton, TwitterFollowButton } from \"react-twitter-embed\";\nconst TwitterButton = props => {\n  return (\n    <TwitterShareButton\n      url={\"https://pjdaze.github.io/my-hero-stats-redux/\"}\n      options={{\n        text: \"So This Are The Stats On My Favorite Super Hero!\"\n      }}\n    />\n  );\n};\n\nexport default TwitterButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport HeroCardWrapper from \"../Wrappers/HeroCardWrapper\";\nimport TwitterButton from \"./TwitterButton\";\nimport { closeHeroCard } from \"../actions\";\n\nconst FlippedCard = ({\n  images,\n  name,\n  powers,\n  appearance,\n  biography,\n  onFlip,\n  closeHeroCard\n}) => {\n  //const appearanceStats = Object.entries(appearance);\n\n  const powerStats = Object.entries(powers);\n\n  const getStats = powerStats.map((stats, i) => (\n    <li key={i}>{`${stats[0]}: ${stats[1]}`}</li>\n  ));\n\n  return (\n    <HeroCardWrapper primary>\n      <div className=\"img-wrap\">\n        <img src={images} alt=\"heroes\" />\n      </div>\n      <button className=\"flip-button\" onClick={closeHeroCard}>\n        FlIP CARD\n      </button>\n      <div className=\"flipped-card\">\n        {\" \"}\n        <p className=\"card-titles\">Name:</p>\n        <p>{name}</p>\n        <p className=\"card-titles\">Nicknames: </p>\n        <p>{biography.aliases.join(\", \")}</p>\n        <p className=\"card-titles\">Place Of Birth:</p>\n        <p>{biography.placeOfBirth}</p>\n        <p className=\"card-titles\">First Appearance:</p>\n        <p>{biography.firstAppearance}</p>\n        <span className=\"card-titles\">Publisher:</span>\n        <p>{biography.firstAppearance}</p>\n        <p className=\"card-titles\">Appearance:</p>\n        <ul>\n          <li>Gender: {appearance.gender}</li>\n          <li>Race: {appearance.race}</li>\n          <li>Hair Color: {appearance.hairColor}</li>\n          <li>Height: {appearance.height[0]}</li>\n          <li>Weight: {appearance.weight[0]}</li>\n        </ul>\n      </div>\n      <div className=\"power-stats\">\n        <p className=\"card-titles\">Powers Stats</p>\n        <ul>{getStats}</ul>\n      </div>\n\n      <TwitterButton />\n    </HeroCardWrapper>\n  );\n};\n\nconst mapState = state => ({});\nconst mapDispatch = {\n  closeHeroCard\n};\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(FlippedCard);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_HEROES_PENDING,\n  REQUEST_HEROES_SUCCESS,\n  REQUEST_HEROES_FAILED,\n  SET_CURRENT_HERO,\n  CLOSE_HERO_CARD\n} from \"./constants\";\n\n//for search box\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\n\n//This one is to fetch data from api\nexport const requestHeroes = () => dispatch => {\n  dispatch({ type: REQUEST_HEROES_PENDING });\n  fetch(\"https://akabab.github.io/superhero-api/api/all.json\")\n    .then(res => res.json())\n    .then(data => dispatch({ type: REQUEST_HEROES_SUCCESS, payload: data }))\n    .catch(err => dispatch({ type: REQUEST_HEROES_FAILED, payload: err }));\n};\n\nexport const closeHeroCard = () => ({\n  type: CLOSE_HERO_CARD\n});\n\nexport const setOnClick = e => ({\n  type: SET_CURRENT_HERO,\n  payload: e\n});\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\nexport const REQUEST_HEROES_PENDING = \"REQUEST_HEROES_PENDING\";\nexport const REQUEST_HEROES_SUCCESS = \"REQUEST_HEROES_SUCCESS\";\nexport const REQUEST_HEROES_FAILED = \"REQUEST_HEROES_FAILED\";\nexport const SET_CURRENT_HERO = \"SET_CURRENT_HERO\";\nexport const CLICK_OFF = \"CLICK_OFF\";\nexport const CLICK_ON = \"CLICK_ON\";\nexport const TOGGLE = \"TOGGLE\";\nexport const CLOSE_HERO_CARD = \"CLOSE_HERO_CARD\";\n","import React from \"react\";\nimport HeroCard from \"../components/HeroCard\";\nimport ScrollBox from \"./ScrollBox\";\nimport FlippedCard from \"./FlippedCard\";\n\nconst HeroCardList = ({ heroes, onFlip, isFlipped, cardToFlip }) => {\n  return (\n    <ScrollBox>\n      {heroes.map((x, i) => {\n        if (!isFlipped) {\n          return (\n            <HeroCard\n              key={Math.random() + heroes[i]}\n              name={heroes[i].name}\n              images={heroes[i].images.lg}\n              onFlip={onFlip}\n            />\n          );\n        } else if (heroes[i].name === cardToFlip) {\n          return (\n            <FlippedCard\n              key={Math.random() + heroes[i]}\n              appearance={heroes[i].appearance}\n              name={heroes[i].name}\n              images={heroes[i].images.sm}\n              powers={heroes[i].powerstats}\n              biography={heroes[i].biography}\n              onFlip={onFlip}\n              cardToFlip={cardToFlip}\n            />\n          );\n        }\n      })}\n    </ScrollBox>\n  );\n};\n\nexport default HeroCardList;\n","import React from \"react\";\nimport { BrowserRouter as Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\n\nconst Routes = props => (\n  <Switch>\n    <Route path=\"/\" exact component={App} />\n    <Route path=\"/App\" component={App} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport HomeWrap from \"./Wrappers/HomeWrap\";\n\nimport { heroes } from \"./fake_data/Heroes\";\nimport SearchBox from \"./components/SearchBox\";\nimport HeroCardList from \"./components/HeroCardList\";\nimport ScrollBox from \"./components/ScrollBox\";\nimport Routes from \"./routes\";\nimport \"./App.css\";\n\nimport { setSearchField, requestHeroes, setOnClick } from \"./actions\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchHeroes.searchField,\n    heroes: state.requestHeroes.heroes,\n    isPending: state.requestHeroes.isPending,\n    err: state.requestHeroes.err,\n    flipped: state.setOnClick.flipped,\n    cardToFlip: state.setOnClick.cardToFlip\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n\n    onRequestHeroes: () => dispatch(requestHeroes()),\n    handleClick: e => dispatch(setOnClick(e.target.id))\n  };\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    console.log(\n      `APOLOGIES FOR ALL THE ACTION LOGS, ONCE DONE WITH STYLING ALL GET THIS OUT`,\n      new Date()\n    );\n    this.props.onRequestHeroes();\n  }\n\n  render() {\n    const {\n      heroes,\n      onSearchChange,\n      searchField,\n      cardToFlip,\n      handleClick,\n      flipped\n    } = this.props;\n\n    const findHeroe = heroes.filter(x =>\n      x.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <HomeWrap className=\"home\">\n        <header style={{ height: \"100px\" }}>\n          {\" \"}\n          <h1>Find Your Hero</h1>\n        </header>\n        <SearchBox searchChange={onSearchChange} />\n        <HeroCardList\n          heroes={findHeroe.slice(0, 12)}\n          onFlip={handleClick}\n          isFlipped={flipped}\n          cardToFlip={cardToFlip}\n        />\n        <Routes />\n      </HomeWrap>\n    );\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_HEROES_PENDING,\n  REQUEST_HEROES_SUCCESS,\n  REQUEST_HEROES_FAILED,\n  SET_CURRENT_HERO,\n  CLOSE_HERO_CARD\n} from \"./constants\";\n\nconst searchInitialState = {\n  searchField: \"\"\n};\n\nconst heroesInitialState = {\n  isPending: false,\n  heroes: [],\n  err: \"\"\n};\n\nconst heroIdInitialState = {\n  cardToFlip: \"\"\n};\n\nconst clickInitialState = {\n  flipped: false,\n  cardToFlip: \"\"\n};\n\n//////Here i use default params in case state or action is empty\nexport const searchHeroes = (state = searchInitialState, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return { ...state, searchField: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const requestHeroes = (state = heroesInitialState, action = {}) => {\n  switch (action.type) {\n    case REQUEST_HEROES_PENDING:\n      return { ...state, isPending: true };\n    case REQUEST_HEROES_SUCCESS:\n      return { ...state, heroes: action.payload, isPending: false };\n\n    case REQUEST_HEROES_FAILED:\n      return { ...state, err: action.payload, isPending: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const setHeroID = (state = heroIdInitialState, action = {}) => {\n  switch (action.type) {\n    case SET_CURRENT_HERO:\n      return { ...state, cardToFlip: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const setOnClick = (state = clickInitialState, action = {}) => {\n  switch (action.type) {\n    case SET_CURRENT_HERO:\n      return {\n        ...state,\n        flipped: true,\n        cardToFlip: action.payload\n      };\n\n    case CLOSE_HERO_CARD:\n      return { ...state, flipped: false, cardToFlip: null };\n\n    case \"CLOSE_HERO_CARD\":\n      return { ...state, flipped: false, cardToFlip: null };\n\n    default:\n      return state;\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nimport { searchHeroes, setHeroID, setOnClick, requestHeroes } from \"./reducers\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({\n  searchHeroes,\n  requestHeroes,\n  setHeroID,\n  setOnClick\n});\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}